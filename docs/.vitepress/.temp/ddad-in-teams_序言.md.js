import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"序言：文档驱动AI开发(DDAD)革命","description":"","frontmatter":{},"headers":[],"relativePath":"ddad-in-teams/序言.md","filePath":"ddad-in-teams/序言.md"}');
const _sfc_main = { name: "ddad-in-teams/序言.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="序言-文档驱动ai开发-ddad-革命" tabindex="-1">序言：文档驱动AI开发(DDAD)革命 <a class="header-anchor" href="#序言-文档驱动ai开发-ddad-革命" aria-label="Permalink to &quot;序言：文档驱动AI开发(DDAD)革命&quot;">​</a></h1><blockquote><p>AI时代下的团队协作开发实践指南</p><p>&quot;从代码补全到智能体(Agent)伙伴：DDAD引领的协作范式革命&quot;</p></blockquote><hr><h2 id="🎯-核心理念-从规范驱动-spec-driven-到文档驱动-ddad" tabindex="-1">🎯 核心理念：从规范驱动(Spec-Driven)到文档驱动(DDAD) <a class="header-anchor" href="#🎯-核心理念-从规范驱动-spec-driven-到文档驱动-ddad" aria-label="Permalink to &quot;🎯 核心理念：从规范驱动(Spec-Driven)到文档驱动(DDAD)&quot;">​</a></h2><p><strong>规范驱动开发(Spec-Driven Development)</strong> 是业界领先的开发思想,强调在编码前编写详尽、清晰、可执行的规范(Spec)。这一理念在AI时代演化为我们的核心方法论：<strong>DDAD(Document-Driven AI Development,文档驱动AI开发)</strong>。</p><h3 id="什么是ddad" tabindex="-1">什么是DDAD? <a class="header-anchor" href="#什么是ddad" aria-label="Permalink to &quot;什么是DDAD?&quot;">​</a></h3><p>DDAD继承并扩展了规范驱动思想,专为AI协作时代设计。它解决了这个时代最关键的问题:</p><blockquote><p><strong>当AI成为开发团队的一员时,我们如何确保它能准确理解人类意图并高效协作?</strong></p></blockquote><h3 id="ddad的三大核心原则" tabindex="-1">DDAD的三大核心原则 <a class="header-anchor" href="#ddad的三大核心原则" aria-label="Permalink to &quot;DDAD的三大核心原则&quot;">​</a></h3><h4 id="_1️⃣-规范即接口-spec-as-interface-人机协作的协议" tabindex="-1">1️⃣ 规范即接口(Spec as Interface):人机协作的协议 <a class="header-anchor" href="#_1️⃣-规范即接口-spec-as-interface-人机协作的协议" aria-label="Permalink to &quot;1️⃣ 规范即接口(Spec as Interface):人机协作的协议&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔑 规范(Spec)是AI的执行指令,而非可有可无的文档</span></span>
<span class="line"><span>🔑 结构化的规范成为人类与AI之间精确的&quot;协作契约&quot;</span></span>
<span class="line"><span>🔑 所有项目需求和约束都被翻译成AI可理解的语言</span></span></code></pre></div><h4 id="_2️⃣-知识即代码-可执行的团队记忆" tabindex="-1">2️⃣ 知识即代码:可执行的团队记忆 <a class="header-anchor" href="#_2️⃣-知识即代码-可执行的团队记忆" aria-label="Permalink to &quot;2️⃣ 知识即代码:可执行的团队记忆&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔑 架构决策、编码规范、业务规则全部文档化</span></span>
<span class="line"><span>🔑 AI通过文档获得完整的&quot;项目记忆&quot;</span></span>
<span class="line"><span>🔑 新团队成员(包括AI)零成本融入</span></span></code></pre></div><h4 id="_3️⃣-协作即编排-人机混合的工作流" tabindex="-1">3️⃣ 协作即编排:人机混合的工作流 <a class="header-anchor" href="#_3️⃣-协作即编排-人机混合的工作流" aria-label="Permalink to &quot;3️⃣ 协作即编排:人机混合的工作流&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔑 人类负责创意、决策、架构设计</span></span>
<span class="line"><span>🔑 AI负责实现、优化、重复性工作</span></span>
<span class="line"><span>🔑 文档确保两者无缝协作</span></span></code></pre></div><h3 id="ddad-vs-传统开发-范式革命" tabindex="-1">DDAD vs 传统开发:范式革命 <a class="header-anchor" href="#ddad-vs-传统开发-范式革命" aria-label="Permalink to &quot;DDAD vs 传统开发:范式革命&quot;">​</a></h3><table tabindex="0"><thead><tr><th>传统开发</th><th>DDAD开发</th></tr></thead><tbody><tr><td>文档事后补充</td><td>文档事前驱动</td></tr><tr><td>人与人沟通</td><td>人-AI-人协作</td></tr><tr><td>代码为核心</td><td>文档+代码双核心</td></tr><tr><td>个人英雄主义</td><td>团队协作增强</td></tr></tbody></table><hr><h2 id="🚀-实践框架-构建人机协作的团队文化" tabindex="-1">🚀 实践框架:构建人机协作的团队文化 <a class="header-anchor" href="#🚀-实践框架-构建人机协作的团队文化" aria-label="Permalink to &quot;🚀 实践框架:构建人机协作的团队文化&quot;">​</a></h2><h3 id="vibe-coding-由规范驱动的高效协作-spec-driven-vibe-coding" tabindex="-1">Vibe Coding:由规范驱动的高效协作(Spec-Driven Vibe Coding) <a class="header-anchor" href="#vibe-coding-由规范驱动的高效协作-spec-driven-vibe-coding" aria-label="Permalink to &quot;Vibe Coding:由规范驱动的高效协作(Spec-Driven Vibe Coding)&quot;">​</a></h3><p>我们采纳并扩展了 <strong>&quot;规范驱动下的Vibe Coding&quot;(Spec-Driven Vibe Coding)</strong> 理念。它并非凭感觉随意编码,而是指在DDAD坚实的规范文档基础上,达成的一种 <strong>高信任度、高流畅度的人机协作状态</strong>。</p><p>当一份清晰、无歧义的规范(Spec)成为团队共识后,开发的重点从&quot;如何实现&quot;转向&quot;为何创造&quot;。这种状态旨在达成以下目标:</p><ul><li><p><strong>心理安全(Psychological Safety)</strong>:当文档成为清晰的协作协议后,团队成员(包括AI)能够放心地进行实验和创新,因为&quot;对错&quot;有据可依,失败的尝试会成为完善文档的宝贵数据,而非个人责备的来源。</p></li><li><p><strong>快速工程(Rapid Engineering)</strong>:AI的引入将开发周期从数周缩短至数天甚至数小时。瓶颈不再是编码,而是 <strong>决策速度</strong>。Vibe Coding代表了在这种高速迭代中,团队凭借深度的客户共情和DDAD提供的结构化知识,快速做出高质量产品决策的能力。</p></li><li><p><strong>人机协同(Human-AI Symbiosis)</strong>:建立一种&quot;AI是同事,而非工具&quot;的文化。人类专注于创造性、战略决策和复杂问题定义,而AI则作为可靠的伙伴,负责执行、测试和优化。</p></li></ul><h3 id="五级协作成熟度模型" tabindex="-1">五级协作成熟度模型 <a class="header-anchor" href="#五级协作成熟度模型" aria-label="Permalink to &quot;五级协作成熟度模型&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">graph TD</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    A[Level 1: 工具使用] --&gt; B[Level 2: 流程集成]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    B --&gt; C[Level 3: 知识共享]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    C --&gt; D[Level 4: 智能编排]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    D --&gt; E[Level 5: 生态协同]</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    A1[个人AI工具使用] --&gt; B1[团队流程标准化]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    B1 --&gt; C1[知识库共建共享]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    C1 --&gt; D1[AI主动任务编排]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    D1 --&gt; E1[人机协作生态系统]</span></span></code></pre></div><table tabindex="0"><thead><tr><th>级别</th><th>特征</th><th>关键指标</th><th>DDAD应用</th></tr></thead><tbody><tr><td><strong>L1 工具使用</strong></td><td>个人AI工具尝试</td><td>工具使用率&gt;50%</td><td>基础文档模板</td></tr><tr><td><strong>L2 流程集成</strong></td><td>团队流程标准化</td><td>流程覆盖率&gt;70%</td><td>标准化工作流</td></tr><tr><td><strong>L3 知识共享</strong></td><td>知识库共建共享</td><td>知识复用率&gt;60%</td><td>结构化知识库</td></tr><tr><td><strong>L4 智能编排</strong></td><td>AI主动任务编排</td><td>自动化率&gt;40%</td><td>AI驱动开发</td></tr><tr><td><strong>L5 生态协同</strong></td><td>人机协作生态</td><td>协作效率提升3x</td><td>全面DDAD实施</td></tr></tbody></table><hr><h2 id="📋-ddad实施指南-从零到一的实践路径" tabindex="-1">📋 DDAD实施指南:从零到一的实践路径 <a class="header-anchor" href="#📋-ddad实施指南-从零到一的实践路径" aria-label="Permalink to &quot;📋 DDAD实施指南:从零到一的实践路径&quot;">​</a></h2><h3 id="第一步-建立ddad基础设施" tabindex="-1">第一步:建立DDAD基础设施 <a class="header-anchor" href="#第一步-建立ddad基础设施" aria-label="Permalink to &quot;第一步:建立DDAD基础设施&quot;">​</a></h3><h4 id="_1-文档体系架构" tabindex="-1">1. 文档体系架构 <a class="header-anchor" href="#_1-文档体系架构" aria-label="Permalink to &quot;1. 文档体系架构&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── 01-specs/           # 技术规范文档</span></span>
<span class="line"><span>│   ├── architecture.md  # 系统架构规范</span></span>
<span class="line"><span>│   ├── coding-std.md    # 编码规范</span></span>
<span class="line"><span>│   └── api-design.md    # API设计规范</span></span>
<span class="line"><span>├── 02-rules/           # 业务规则文档</span></span>
<span class="line"><span>│   ├── business.md      # 业务规则</span></span>
<span class="line"><span>│   ├── validation.md    # 验证规则</span></span>
<span class="line"><span>│   └── workflow.md      # 工作流程</span></span>
<span class="line"><span>├── 03-guides/          # 操作指南</span></span>
<span class="line"><span>│   ├── ai-prompts.md    # AI提示模板</span></span>
<span class="line"><span>│   ├── review-guide.md  # 代码审查指南</span></span>
<span class="line"><span>│   └── troubleshooting.md # 问题排查</span></span>
<span class="line"><span>└── 04-knowledge/       # 知识库</span></span>
<span class="line"><span>    ├── decisions.md     # 架构决策记录</span></span>
<span class="line"><span>    ├── faq.md          # 常见问题</span></span>
<span class="line"><span>    └── lessons.md       # 经验教训</span></span></code></pre></div><h4 id="_2-ai协作工作流模板-spec示例" tabindex="-1">2. AI协作工作流模板(Spec示例) <a class="header-anchor" href="#_2-ai协作工作流模板-spec示例" aria-label="Permalink to &quot;2. AI协作工作流模板(Spec示例)&quot;">​</a></h4><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}"># 任务:用户认证模块重构</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">## AI执行规范(Spec)</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 技术约束</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 框架:Spring Boot 3.x + Spring Security</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 认证:JWT Token + Refresh Token</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 存储:Redis Session存储</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 密码:BCrypt加密</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 业务规则</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 用户名:3-20位,字母数字下划线</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 密码:8-20位,必须包含大小写+数字</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 邮箱:需要验证格式,注册后24h有效</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 登录失败:连续5次失败锁定30分钟</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 质量标准</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 响应时间:&lt;200ms</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 测试覆盖率:&gt;90%</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 安全等级:OWASP Top 10防护</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 错误处理:统一异常返回格式</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 历史上下文</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 2024-03-15:从Session改为JWT架构</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 2024-05-20:添加Redis缓存层</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 2024-08-10:集成Spring Security 6.x</span></span></code></pre></div><h3 id="第二步-团队vibe-coding文化建设" tabindex="-1">第二步:团队Vibe Coding文化建设 <a class="header-anchor" href="#第二步-团队vibe-coding文化建设" aria-label="Permalink to &quot;第二步:团队Vibe Coding文化建设&quot;">​</a></h3><h4 id="心理安全建设框架" tabindex="-1">心理安全建设框架 <a class="header-anchor" href="#心理安全建设框架" aria-label="Permalink to &quot;心理安全建设框架&quot;">​</a></h4><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">## 团队Vibe Coding公约</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 🤝 协作原则</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">1.</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **AI是同事,不是工具**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:尊重AI的&quot;劳动成果&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">2.</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **人类负责决策**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:关键决策始终由人类做出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">3.</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **错误是学习机会**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:AI的错误帮助团队完善文档</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">4.</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **持续反馈循环**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:每次协作都改进文档质量</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 🎯 角色分工</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **架构师**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:定义系统边界和关键决策</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **资深开发者**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:制定规范、审查AI产出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **初级开发者**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:学习规范、协助文档完善</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-light-font-weight": "bold", "--shiki-dark": "#E1E4E8", "--shiki-dark-font-weight": "bold" })}"> **AI助手**</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">:执行编码、测试、重构任务</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-light-font-weight": "bold", "--shiki-dark": "#79B8FF", "--shiki-dark-font-weight": "bold" })}">### 📊 成功指标</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 文档更新频率:每周&gt;5次</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> AI代码采纳率:&gt;80%</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 团队满意度:&gt;4.5/5</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#E36209", "--shiki-dark": "#FFAB70" })}">-</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> 交付效率提升:&gt;30%</span></span></code></pre></div><h3 id="第三步-风险分级管理" tabindex="-1">第三步:风险分级管理 <a class="header-anchor" href="#第三步-风险分级管理" aria-label="Permalink to &quot;第三步:风险分级管理&quot;">​</a></h3><h4 id="ai参与风险评估矩阵" tabindex="-1">AI参与风险评估矩阵 <a class="header-anchor" href="#ai参与风险评估矩阵" aria-label="Permalink to &quot;AI参与风险评估矩阵&quot;">​</a></h4><table tabindex="0"><thead><tr><th>任务类型</th><th>风险等级</th><th>AI参与策略</th><th>人类审查要求</th></tr></thead><tbody><tr><td><strong>内部工具开发</strong></td><td>🟢 低风险</td><td>全权委托</td><td>基础审查</td></tr><tr><td><strong>CRUD接口</strong></td><td>🟡 中低风险</td><td>规范约束</td><td>逻辑审查</td></tr><tr><td><strong>核心业务逻辑</strong></td><td>🟠 中高风险</td><td>逐步确认</td><td>详细审查</td></tr><tr><td><strong>支付/安全模块</strong></td><td>🔴 高风险</td><td>禁止参与</td><td>人工开发</td></tr></tbody></table><h4 id="实施检查清单" tabindex="-1">实施检查清单 <a class="header-anchor" href="#实施检查清单" aria-label="Permalink to &quot;实施检查清单&quot;">​</a></h4><ul><li>[ ] 建立任务风险分级标准</li><li>[ ] 制定AI参与边界政策</li><li>[ ] 设置自动化质量门禁</li><li>[ ] 建立人工审查工作流</li></ul><hr><h2 id="📚-学习路径-掌握ddad与vibe-coding" tabindex="-1">📚 学习路径:掌握DDAD与Vibe Coding <a class="header-anchor" href="#📚-学习路径-掌握ddad与vibe-coding" aria-label="Permalink to &quot;📚 学习路径:掌握DDAD与Vibe Coding&quot;">​</a></h2><h3 id="新手入门路径-2周速成" tabindex="-1">新手入门路径(2周速成) <a class="header-anchor" href="#新手入门路径-2周速成" aria-label="Permalink to &quot;新手入门路径(2周速成)&quot;">​</a></h3><h4 id="week-1-基础认知" tabindex="-1">Week 1: 基础认知 <a class="header-anchor" href="#week-1-基础认知" aria-label="Permalink to &quot;Week 1: 基础认知&quot;">​</a></h4><ul><li><strong>Day 1-2</strong>: 理解DDAD核心理念</li><li><strong>Day 3-4</strong>: 熟悉文档模板和结构</li><li><strong>Day 5-7</strong>: 完成第一个AI协作任务</li></ul><h4 id="week-2-实践提升" tabindex="-1">Week 2: 实践提升 <a class="header-anchor" href="#week-2-实践提升" aria-label="Permalink to &quot;Week 2: 实践提升&quot;">​</a></h4><ul><li><strong>Day 8-10</strong>: 建立团队文档体系</li><li><strong>Day 11-12</strong>: 设计协作工作流</li><li><strong>Day 13-14</strong>: 评估和优化</li></ul><h3 id="进阶专家路径-1个月精通" tabindex="-1">进阶专家路径(1个月精通) <a class="header-anchor" href="#进阶专家路径-1个月精通" aria-label="Permalink to &quot;进阶专家路径(1个月精通)&quot;">​</a></h3><h4 id="phase-1-深度理解-week-1-2" tabindex="-1">Phase 1: 深度理解(Week 1-2) <a class="header-anchor" href="#phase-1-深度理解-week-1-2" aria-label="Permalink to &quot;Phase 1: 深度理解(Week 1-2)&quot;">​</a></h4><ul><li>掌握高级文档结构设计</li><li>学习复杂业务规则文档化</li><li>实践跨团队协作模式</li></ul><h4 id="phase-2-系统实施-week-3-4" tabindex="-1">Phase 2: 系统实施(Week 3-4) <a class="header-anchor" href="#phase-2-系统实施-week-3-4" aria-label="Permalink to &quot;Phase 2: 系统实施(Week 3-4)&quot;">​</a></h4><ul><li>建立完整的知识库体系</li><li>设计AI协作质量评估体系</li><li>优化团队Vibe Coding文化</li></ul><hr><h2 id="🎯-适用读者画像" tabindex="-1">🎯 适用读者画像 <a class="header-anchor" href="#🎯-适用读者画像" aria-label="Permalink to &quot;🎯 适用读者画像&quot;">​</a></h2><h3 id="👨‍💻-技术领导者" tabindex="-1">👨‍💻 技术领导者 <a class="header-anchor" href="#👨‍💻-技术领导者" aria-label="Permalink to &quot;👨‍💻 技术领导者&quot;">​</a></h3><p><strong>核心需求</strong>:建立AI时代的团队协作标准 <strong>学习重点</strong>:DDAD方法论、团队文化建设、风险管理</p><h3 id="👥-开发团队成员" tabindex="-1">👥 开发团队成员 <a class="header-anchor" href="#👥-开发团队成员" aria-label="Permalink to &quot;👥 开发团队成员&quot;">​</a></h3><p><strong>核心需求</strong>:提升个人AI协作效率 <strong>学习重点</strong>:文档编写技巧、AI提示工程、质量控制</p><h3 id="📊-项目管理角色" tabindex="-1">📊 项目管理角色 <a class="header-anchor" href="#📊-项目管理角色" aria-label="Permalink to &quot;📊 项目管理角色&quot;">​</a></h3><p><strong>核心需求</strong>:管理AI增强的项目交付 <strong>学习重点</strong>:任务分解、进度跟踪、质量评估</p><h3 id="🏢-企业决策层" tabindex="-1">🏢 企业决策层 <a class="header-anchor" href="#🏢-企业决策层" aria-label="Permalink to &quot;🏢 企业决策层&quot;">​</a></h3><p><strong>核心需求</strong>:制定AI协作战略 <strong>学习重点</strong>:ROI评估、风险管控、人才培养</p><hr><h2 id="🌟-立即开始-您的ddad之旅" tabindex="-1">🌟 立即开始:您的DDAD之旅 <a class="header-anchor" href="#🌟-立即开始-您的ddad之旅" aria-label="Permalink to &quot;🌟 立即开始:您的DDAD之旅&quot;">​</a></h2><h3 id="快速启动检查清单" tabindex="-1">快速启动检查清单 <a class="header-anchor" href="#快速启动检查清单" aria-label="Permalink to &quot;快速启动检查清单&quot;">​</a></h3><ul><li>[ ] 安装必要的AI编程工具</li><li>[ ] 克隆本书示例项目</li><li>[ ] 完成第一个DDAD文档</li><li>[ ] 运行第一次AI协作任务</li></ul><h3 id="学习建议" tabindex="-1">学习建议 <a class="header-anchor" href="#学习建议" aria-label="Permalink to &quot;学习建议&quot;">​</a></h3><ol><li><strong>循序渐进</strong>:从低风险任务开始,逐步扩大AI参与范围</li><li><strong>持续迭代</strong>:根据实践经验不断完善文档体系</li><li><strong>团队协作</strong>:与团队成员共同建立最佳实践</li><li><strong>记录分享</strong>:将经验转化为团队知识库</li></ol><hr><h2 id="💡-思想来源" tabindex="-1">💡 思想来源 <a class="header-anchor" href="#💡-思想来源" aria-label="Permalink to &quot;💡 思想来源&quot;">​</a></h2><p>本书提出的DDAD方法论深受业界关于 <strong>规范驱动开发(Spec-Driven Development)</strong> 前沿思想的启发。我们整合并扩展了这些理念,使其适应AI时代的团队协作模式。</p><p>特别感谢以下资源提供的灵感:</p><ul><li><a href="https://github.com/mosofsky/spec-then-code" target="_blank" rel="noreferrer">mosofsky/spec-then-code</a> - Spec-first开发实践</li><li><a href="https://vivekhaldar.com/articles/spec-driven-vibe-coding/" target="_blank" rel="noreferrer">Spec-Driven Vibe Coding by Vivek Haldar</a> - 规范驱动的协作理念</li><li><a href="https://mcpmarket.com/zh/server/spec-coding" target="_blank" rel="noreferrer">Spec-Coding 规范编码</a> - MCP生态下的规范编码实践</li></ul><p>DDAD正是在这些思想的基础上,针对人机协作的特殊挑战所做的进一步探索和实践。</p><hr><h2 id="✨-ddad方法论宣言" tabindex="-1">✨ DDAD方法论宣言 <a class="header-anchor" href="#✨-ddad方法论宣言" aria-label="Permalink to &quot;✨ DDAD方法论宣言&quot;">​</a></h2><blockquote><p><em>&quot;在AI时代,最优秀的产品不是由人或AI单独创造的,而是由两者协作完成的。&quot;</em></p></blockquote><blockquote><p><em>&quot;当开发从数周缩短到一天,瓶颈就从写代码转移到决策本身。DDAD正是为加速高质量决策而设计的工程框架。&quot;</em></p></blockquote><blockquote><p><em>&quot;文档不是负担,而是人机协作的语言;规范不是束缚,而是创新的基础。&quot;</em></p></blockquote><hr><p><strong>现在,让我们开始这场协作革命的旅程!</strong> 👉 <a href="./chapter1.html">第一章:引言</a></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("ddad-in-teams/序言.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  __ as default
};
